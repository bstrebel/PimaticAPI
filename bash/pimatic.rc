#! /bin/sh
### BEGIN INIT INFO
# Provides:          pimatic
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: pimatic service
# Description:       pimatic home automation framework init.d script for debian systems.
### END INIT INFO

# Author: Oliver Schneider <oliverschneider89+sweetpi@gmail.com>
# Install:
# cp pimatic-init-d /etc/init.d/pimatic
# chmod +x /etc/init.d/pimatic
# chown root:root /etc/init.d/pimatic
# update-rc.d pimatic defaults
# Make sure the pimatic.js file is linked in one of the pathes in the PATH variable below.
# The node.js binary must be in the PATH, too.

PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/sbin:/usr/local/bin

export PIMATIC_ROOT=/opt/pimatic/core
cd $PIMATIC_ROOT

ERROR=0

do_start() {

    /usr/local/sbin/pimatic-ttyUSB

    node_modules/pimatic/pimatic.js start
    ERROR=$?
}

do_stop() {

	node_modules/pimatic/pimatic.js stop
	ERROR=$?

    [ -f "pimatic-database.sqlite-wal" ] || {
        STAMP=$(date "+%Y-%m-%d_%H%M%S")
        cp pimatic-database.sqlite ${STAMP}_pimatic.sqlite && ln -sf ${STAMP}_pimatic.sqlite pimatic-current.sqlite
        cp config.json ${STAMP}_config.json && ln -sf ${STAMP}_config.json config-current.json
    }
}

case "$1" in

    start)      do_start ;;
    stop)       do_stop  ;;
    restart)    do_stop  && sleep 5 && do_start ;;
    status)     node_modules/pimatic/pimatic.js status ; ERROR=$? ;;
    *) 	        echo "Usage: service pimatic {start|stop|status|restart}" >&2 ; ERROR=3 ;;

esac

exit $ERROR
